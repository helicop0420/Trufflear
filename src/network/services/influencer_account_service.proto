syntax = "proto3";

package influencer;

import "src/network/services/influencer_profile.proto";

option java_multiple_files = true;
option java_package = "com.trufflear.search.influencer";
option java_outer_classname = "InfluencerAccountServiceProtos";

/*
 * This service connects the influencer's Instagram account with their Trufflear account.
 * All requests to the service must contain the id token of the influencer in the metadata, "id-token"
 */
service InfluencerAccountService {
  // Sign up for user whey they fist sign up via AWS Cognito
  rpc Signup(SignupRequest) returns (SignupResponse);

  // Update profile information
  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileRequestResponse);

  // Get the account profile information
  rpc GetProfile(GetProfileRequest) returns (GetProfileResponse);

  // Set the profile URL to live or not
  rpc SetProfileLive(SetProfileLiveRequest) returns (SetProfileLiveResponse);

  // Get the presigned url to upload a JPEG image to (using PUT)
  rpc GetProfileImageUploadUrl(GetProfileImageUploadUrlRequest) returns (GetProfileImageUploadUrlResponse);

  // Send this request when an image is successfully uploaded
  rpc SucceedInImageUpload(ImageUploadSuccessRequest) returns (ImageUploadSuccessResponse);
}

message SignupRequest {}

// Response can throw "user already exist" status exceptions
message SignupResponse {}

message UpdateProfileRequest {
  string profile_title = 1;
  string profession_category = 2;
  string bio_description = 3;

}

message UpdateProfileRequestResponse {}

message GetProfileRequest {}

message GetProfileResponse {
  // profile info of the influencer
  InfluencerProfile influencer_profile = 1;
  bool is_profile_live = 2;
}

message SetProfileLiveRequest {
  bool set_profile_live = 1;
}

message SetProfileLiveResponse {}

message GetProfileImageUploadUrlRequest {}

message GetProfileImageUploadUrlResponse {
  /*
   * when uploading to this url, use PUT.
   * Set Content-Type to image/jpeg. Also, Content-Length needs to be set too.
   */
  string url = 1;
}

message ImageUploadSuccessRequest {}

message ImageUploadSuccessResponse {}